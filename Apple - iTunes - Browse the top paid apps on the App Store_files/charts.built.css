/* ---- BUILT FILE. DO NOT MODIFY THIS DIRECTLY. ---- */

@charset "UTF-8";
/** The `base-font-size` is what's used when calculating `em()`s.  @group settings @type Number @access public */
/** The default border-radius for components  @group settings @type Number @access public */
/** The default color of text  @group settings @type Color @access public  @todo Deprecate this */
/** The default color of links  @group settings @type Color @access public  @todo Deprecate this */
/** The default color of the background  @group settings @type Color @access public  @todo Deprecate this */
/** Whether or not the project has JS-based feature detection  @group settings @type Boolean @access public */
/** A map containing the names and paths to places assets could live. Defaults to false as this must be set on a per-project basis  @group settings @type {Map|Boolean} @access public */
/** The class to use for IE7  @group ie  @type String  @access public  */
/** The class to use for IE8  @group ie  @type String  @access public  */
/** Output styles only for IE7/8  @group ie  @access public  @requires $ie7-selector @requires $ie8-selector  */
/** Output styles only for IE7  @group ie  @access public  @requires $ie7-selector  */
/** Output styles only for IE8  @group ie  @access public  @requires $ie8-selector  */
/** IE7 hack for the `inherit` value. Uses expressions.  @group ie  @access public  @param {String} $property - CSS property  whose value should be set to `inherit`  @requires {mixin} ie7  */
/** IE7 hack for the `inline-block`.  @group ie  @access public  @requires {mixin} ie7  */
/** Removes units from a value  @group utilities  @param {Number} $value   @return {Number} Value without units  */
/** Converts a Number to em units  @group utilities  @param {Number} $value @param {Number} $context ($base-font-size)  @requires $base-font-size @requires strip-units  @return {Number} The $value converted to em's  */
/** Converts a Number to rem units  @group utilities  @param {Number} $value  @requires strip-units @requires em  @return {Number} The $value converted to rem's  */
/** Returns the first item in a list  @group utilities  @param {List} $list  @return {Number | String | Color | Boolean | List | Map} First value in the list  */
/** Returns the last item in a list  @group utilities  @param {List} $list  @return {Number | String | Color | Boolean | List | Map} Last value in the list  */
/** Converts rgba/hsla to an opaque color  @group utilities  @param {Color} $alpha - The alpha color @param {Boolean | Color} $mix (false) - A color to mix with  @return {Color} An opaque color  */
/** Get the full path of an asset with a base path from `$path-urls`  @param {String} $asset - The relative asset path @param {String} $base ('default') - Which base path to use  @return {String} A full asset path  */
/** Get the full `url()` of an asset with a base path from `$path-urls`  @param {String} $asset - The relative asset path @param {String} $base ('default') - Which base path to use  @requires path  @return {String} A full asset path wraped in `url()`  */
/** Convenience method for setting a key-value pair in an existing map  @group utilities  @param {Map} $map - An existing map @param {String} $key - The value's key @param {Number | String | Color | Boolean | List | Map} $value - The value  @returns {Map} A new map with the additional key-value pair  */
/** Center an element or offset it if it's large than the content-width  @group helpers  @access public  @param {Boolean|Number} $width (false) - width of element to be centered @param {Number} $content-width (980px ) - width of parent element */
/** Center an element and the text within it  @group helpers  @access public  @param {Boolean|Number} $width (false) - width of element to be centered @param {Number} $content-width (980px) - width of parent element  @requires {mixin} center  */
/** Self clear an element (a clearfix)  @group helpers  @access public  @link http://nicolasgallagher.com/micro-clearfix-hack/ */
/** Visually hide an element  @group helpers  @access public  */
/** Hide text for image replacement  @group helpers  @access public  */
/** CSS3 cursor fallbacks  @group helpers  @access public  @param {String} $value - cursor property value  */
/** Add a selector on the `html` element  @group helpers  @access public  @param {String} $selector - selector to append to the HTML element  */
/** Target SVG Support  @group helpers  @access public  @param {Boolean} $support  (true) - False for `.no-svg`  */
/** Target Touch Devices  @group helpers  @access public  @param {Boolean} $support (true) -  False for `.no-touch`  */
/** Mouse-hover only, ingnore touch events  @group helpers  @access public */
/**  1. Media queries in em's are always relative to 16px, regardless of the <html> or <body> font size  @group media  */
/** Returns a string for min-width conditions  @group media  @param {Number} $width - The width  @returns {String}  */
/** Returns a string for max-width conditions  @group media  @param {Number} $width - The width  @returns {String}  */
/** Returns a string for min-height conditions  @group media  @param {Number} $height - The height  @returns {String}  */
/** Returns a string for max-height conditions  @group media  @param {Number} $height - The height  @returns {String}  */
/** Returns a string for portrait conditions  @group media  @returns {String}  */
/** Returns a string for landscape conditions  @group media  @returns {String}  */
/** Returns a string for retina conditions  @group media  @returns {List}  */
/** Output a media query with the specified conditions  @group media  @param {String} $query - The media query conditions @param {Boolean} $screen (true) - Add `only screen` condition  */
/** Apply CSS only to viewports of max-width  @group media  @param {Number} $width - The max-width of the viewport  @requires {mixin} media @requires max-width  */
/** Apply CSS only to viewports of min-width  @group media  @param {Number} $width - The min-width of the viewport  @requires {mixin} media @requires min-width  */
/** Apply CSS only to viewports of max-height  @group media  @param {Number} $height - The max-height of the viewport  @requires {mixin} media @requires max-height  */
/** Apply CSS only to viewports of min-height  @group media  @param {Number} $height - The min-height of the viewport  @requires {mixin} media @requires min-height  */
/** Apply CSS only to viewports in portrait orientation  @group media  @requires {mixin} media @requires portrait  */
/** Apply CSS only to viewports in landscape orientation  @group media  @requires {mixin} media @requires landscape  */
/** The base-width for viewports. This determines whether to us `min-width` or `max-width` when using `viewport()` @group viewports @type Number @access public */
/** Use percentages for this viewport (and down) @group viewports @type List @access public */
/** Each viewport defintion includes a `width` and `content-width` for that viewport. Optionally a custom `query` can be defined, as well as being able to __always__ output styles for IE `oldie:true`  @group viewports  @type Viewport Dictionary  @access private  @param {Number} $width - Viewport width; min/max determined from base width; can be a range with `to` or `through` @param {Number} $width - Content width for the viewport-content() mixin @param {String|Boolean} $query - A custom query or `false` for no media query @param {Boolean} $oldie - `@content` for this viewport should always apply for oldie */
/** Check if a viewport with the given name exists  @group viewports  @access public  @param {String} $name - the name of the viewport  @requires $-viewports  @returns {Boolean} - Whether the viewport exists or not */
/** Get viewport of a given name  @group viewports  @access public  @param {String} $name - The name of the viewport  @requires $-viewports @requires viewport-exists  @returns {Map|Boolean} - Viewport or False */
/** Get dpr for a viewport of a given name  @group viewports  @access public  @param {String} $name - The name of the viewport  @requires $-viewports @requires viewport-exists  @returns {String|Boolean} - dpr or False */
/** Add a viewport to the Viewports Dictionary  @group viewports  @access public  @param {String} $name - The name of the viewport @param {Map} $properties - A map of viewport properties  @requires map-set @requires $-viewports  */
/** Remove a viewport from the Viewports Dictionary  @group viewports  @access public  @param {String} $name - The name of the viewport  @requires $-viewports  */
/** Outputs the CSS at a viewport  @group viewports  @access public  @param {String} $name - The name of the viewport  @requires viewport-get @requires $viewport-base-width @requires {mixin} media @requires {mixin} supports-touch  */
/** Outputs the CSS property at each viewport  @group viewports  @access public  @param {String} $property - The name of the property @param {Map} $values - The values in the form `viewport: value`  @requires viewport-exists @requires {mixin} viewport  */
/** Get the min-width of a viewport  @group viewports  @param {String} $name - name of viewport  @requires viewport-exists @requires viewport-get  */
/** Get the max-width of a viewport  @group viewports  @param {String} $name - name of viewport  @requires viewport-exists @requires viewport-get  */
/** Sets the width of the element to the content-width at each viewport  @group viewports  @access public  @requires $-viewports @requires {mixin} viewport-property  */
/** Gets the content width for a specific viewport  @group viewports  @access public  @requires $-viewports @requires {function} viewport-get  @returns {Number|String} - Viewport content width or "auto" if viewport is not defined  */
/** Gets the content padding for a specific viewport  @group viewports  @access public  @param {String | List} $name - name of viewport  @requires viewport-exists @requires viewport-get @requires viewport-get-min @requires viewport-get-max @requires viewport-content-width-for @requires $viewports-flexible-from  */
/** The number of columns to use in the outputted grid @group grid @type Number @access public */
/** The column float direction @group grid @type Number @access public */
/** The column class name @group grid @type String @access public */
/** Row width @group grid @type Percentage @access private */
/** Row width for IE&/8 (oldie) @group grid @type Percentage @access private */
/** Make your own grid system  @group grid  @access public  @param {Number} $columns ($grid-columns) -  Number of columns @param {String} $class ($grid-default-class) - Class to denote columns @param {String} $oldie ($grid-oldie-class) - Class name for columns in IE7/8  */
/** Include column widths on an element without using the grid system's classes  @group grid  @access public  @param {Number} $column-count ($grid-columns) - Width of the column in _n_ columns @param {Number} $total-columns ($grid-columns) - Total number of columns in the grid @param {String} $oldie ($grid-oldie-class) - Class name for columns in IE7/8  @requires $grid-column-float @requires $grid-full-width @requires $grid-full-width-oldie  */
/** Create a new row without using the grid system's classes  @group grid  @access public  */
/** Helpers for show/hide and auto positioning classes.  @group grid  @access public  @param {String} $class ($grid-default-class) - The prefix for the helper classes  */
/** Each image defintion is a map of supported viewports for that image key. Each of those maps contain a `src`, `width` and `height` property.  @group images  @type Image Dictionary  @access private  */
/** Check if a image with the given name exists  @group images  @access public  @param {String} $name - the name of the image  @requires $-images  @returns {Boolean} - Whether the images exists or not */
/** Check if a image by the given name exists for a given type (usually viewport-name or svg)  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires $-images @requires image-get  @returns {Boolean} - Whether the images exists or not */
/** Get image data for a given name  @group images  @access public  @param {String} $name - The name of the image  @requires -images @requires image-exists  @returns {Map|Boolean} - Image object or False */
/** Get image data for a given name and a given type (usually a viewport or 'svg')  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires image-get @requires image-exists-for  @returns {Map|Boolean} - Image object or False */
/** Get the width for a given image of a given type (usually viewport-name or 'svg')  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires image-get-for @requires image-exists-for  @returns {Number|Boolean} - Image width or False */
/** Get the height for a given image of a given type (usually viewport-name or 'svg')  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires image-get-for @requires image-exists-for  @returns {Number|Boolean} - Image height or False */
/** Get the src for a given image of a given type (usually viewport-name or 'svg')  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires image-get-for @requires image-exists-for  @returns {String|Boolean} - Image src or False */
/** Check if a 2x asset exists for a given image and viewport  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires image-get-for @requires image-exists-for  @returns {Boolean} - Image src or False */
/** Get the 2x-src for a given image of a given viewport  @group images  @access public  @param {String} $name - The name of the image @param {String} $type - The name of the viewport or 'svg'  @requires image-get-for @requires image-exists-for  @returns {String|Boolean} - Image src or False */
/** Output the image dimensions for a given image name at each viewport  @group images  @access public  @param {String} $name - The name of the image  @requires image-exists @requires image-exists-for @requires image-width-for @requires image-height-for @requires $-viewports @requires {mixin} viewport  */
/** Add an image to the Image Dictionary of a type (usually viewport-name or 'svg')  @group images  @access private  @param {String} $name - The name of the image @param {String} $type - The name of the viewport @param {Map} $properties - The image properties (`src`, `width`, `height`)  @requires $-images @requires image-exists @requires image-exists-for @requires image-get @requires map-set  @returns {Image Dictionary} */
/** Add an image to the Image Dictionary  @group images  @access public  @param {String} $name - The name of the image @param {Map} $attributes - A map of viewports, each containing a map of image properties (`src`, `width`, `height`) for that viewport  @requires image-add-of-type  */
/** Output retina media query with _2x image path  @group images  @access public  @param {String} $path - The path to the image  @requires {mixin} retina  */
/** Output size for element with background-image  @group images  @param {Number} $width - The width of the image @param {Number} $height - The height of the image @param {Boolean} $size - Should we make the size of the element the size of the image @param {Boolean} $center - Should we center the element in the content width. (Requires content-width to be passed.) @param {Number} $viewport-content-width - The content width of a viewport @access private  @requires {mixin} retina  */
/** Generates the CSS for a background image at each viewport  @group images  @access public  @param {String} $name - The name of the image @param {Boolean} $size (true) - Output the image size. Defaults to true. @param {Boolean} $center (false) - Center image in each viewport. Defaults to false.  @requires $-viewports @requires {mixin} viewport @requires viewport-dpr @requires image-exists @requires image-exists-for @requires image-width-for @requires image-height-for @requires image-src-for @requires center  @todo Use `image-get-for` instead of `map-get($image, $viewport-name)` */
/** Generates the CSS for a SVG background image at each viewport  @group images  @access public  @param {String} $name - The name of the image @param {String} $sizes - Map of the image ratios at each viewport (xlarge: 1.2, large: 1, medium: .7, small: .4, xsmall: .3 ) @param {Boolean} $size (true) - Output the image size. Defaults to true. @param {Boolean} $center (false) - Center image in each viewport. Defaults to false.  @requires $-viewports @requires {mixin} viewport @requires image-exists @requires image-exists-for @requires image-width-for @requires image-height-for @requires image-src-for @requires center  @todo Use `image-get-for` instead of `map-get($image, $viewport-name)` */
/** Generates the CSS for a SVG headline based upon defined typography sizes  @group images  @access public  @param {String} $image - The name of the image @param {String} $typography-style-name - The name of the typography style to grab ratios from @param {Boolean} $default (large) - The default viewport size (native SVG size)  @requires $-viewports @requires {mixin} image-svg @requires typography-get-fontsize-withoutunit-for  */
/** Apply CSS only to retina devices  @group retina  */
/** AC Retina Equivalent Media Query  @group retina  */
/** A list of font stacks to use for different locales  @group typography  @type Map  @access private  */
/** Outputs font-family with the correct Applecom font stack for all locales  @group typography  @access public  */
/** Outputs font-weight with IE support  @group typography  @access public  @param {String} $weight - The desired font-weight  */
/** Each typography defintion is a map of supported viewports for that typography key. Each of those maps contain the properties for that type style (each property maps to a CSS property.)  @group typography  @type Typography Dictionary  @access private  */
/** Check if a typography style with the given name exists  @group typography  @access public  @param {String} $name - the name of the typography style  @requires $-typography  @returns {Boolean} - Whether the typography style exists or not */
/** Check if a typography style by the given name exists for a given viewport  @group typography  @access public  @param {String} $name - The name of the typography style @param {String} $viewport - The name of the viewport  @requires $-typography @requires typography-get  @returns {Boolean} - Whether the typography style exists or not */
/** Get typography style of a given name  @group typography  @access public  @param {String} $name - The name of the typography style  @requires $-typography @requires typography-exists  @returns {Map|Boolean} - Typography Style or False */
/** Get a unitless font-size for a style of a given name for a given viewport  @group typography  @access public  @param {String} $name - The name of the typography style @param {String} $viewport-name - The name of the viewport  @requires typography-get  @returns {Number} - Unitless font-size for type-style at a given viewport. */
/** Add a typography style to the Typography Dictionary for a particular viewport  @group typography  @access private  @param {String} $name - The name of the typography style @param {String} $viewport - The name of the viewport @param {Map} $styles - The style properties (`font-size`, `line-height`, `font-weight`)  @requires $-typography @requires typography-exists @requires typography-exists-for-viewport @requires typography-get @requires map-set  @todo Use `typography-get-for-viewport` instead of `map-get(typography-get($name), $viewport)`  @returns {Typography Dictionary} */
/** Add a typography style to the Typography Dictionary  @group typography  @access public  @param {String} $name - The name of the typography style @param {Map|List} $styles - A map of viewports, each containing a map of style properties (`font-size:`, `line-height:`, `font-weight:`) for that viewport or a list of 2x pt values from the PSD _(font size, line-height, font weight)_.  @requires typography-add-to-viewport  */
/** Generates the CSS for a typography style at each viewport  @group typography  @access public  @param {String} $name - The name of the typography style  @requires $-viewports @requires {mixin} viewport @requires typography-get @requires typography-exists-for-viewport  @todo Use `typography-get-for-viewport` instead of `map-get($typography-styles, $viewport-name)` */
html { font-size: 100%; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; }

body { margin: 0; padding: 0; }

ul, ol, li, dl, dt, dd, h1, h2, h3, h4, h5, h6, hgroup, p, blockquote, figure, form, fieldset, input, legend, pre, abbr { margin: 0; padding: 0; }

pre, code, address, caption, th, figcaption { font-size: 1em; font-weight: normal; font-style: normal; }

fieldset, iframe, img { border: none; }

caption, th { text-align: left; }

table { border-collapse: collapse; border-spacing: 0; }

article, aside, footer, header, nav, main, section, summary, details, hgroup, figure, figcaption { display: block; }

audio, canvas, video, progress { display: inline-block; vertical-align: baseline; }

button { font: inherit; vertical-align: middle; }

@media print { body, #main, #content { color: #000; }
  a, a:link, a:visited { color: #000; text-decoration: none; }
  #globalheader, #globalfooter, #directorynav, #tabs, .noprint, .hide { display: none; } }
html { font-size: 112.5%; }

body { background-color: white; color: #333333; font-style: normal; font-family: "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; font-size: 1em; line-height: 1.4444; font-weight: 400; }
html[lang=ja-JP] body { font-family: "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html[lang=zh-CN] body { font-family: "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html[lang=zh-TW] body { font-family: "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html[lang=zh-HK] body { font-family: "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html[lang=th-TH] body { font-family: "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html[lang=ko-KR] body { font-family: "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

body, input, textarea, select, button { text-rendering: optimizeLegibility; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; -moz-font-feature-settings: "liga", "kern"; }

a { color: #0088cc; }
a:visited, a:link, a:active { text-decoration: none; }
a:hover { text-decoration: underline; }

h1 { font-size: 4.4444em; line-height: 1.1; font-weight: 200; }
html.oldie h1 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] h1 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] h1 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] h1 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] h1 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] h1 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] h1 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

h2 { font-size: 4em; line-height: 1.1111; font-weight: 200; }
html.oldie h2 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] h2 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] h2 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] h2 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] h2 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] h2 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] h2 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

h3 { font-size: 3.5556em; line-height: 1.0625; font-weight: 200; }
html.oldie h3 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] h3 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] h3 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] h3 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] h3 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] h3 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] h3 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

h4 { font-size: 2.2222em; line-height: 1.1; font-weight: 200; }
html.oldie h4 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] h4 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] h4 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] h4 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] h4 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] h4 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] h4 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

h5 { font-size: 1.7778em; line-height: 1.125; font-weight: 200; }
html.oldie h5 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] h5 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] h5 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] h5 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] h5 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] h5 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] h5 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

h6 { font-size: 1.5556em; line-height: 1.1429; font-weight: 200; }
html.oldie h6 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] h6 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] h6 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] h6 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] h6 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] h6 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] h6 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

h1, h2, h3, h4, h5, h6 { margin: 0.5em 0 0 0; }
h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-child, h6:first-child { margin: 0 0 0 0; }
h1 img, h2 img, h3 img, h4 img, h5 img, h6 img { display: block; margin: 0; }

strong, b { font-weight: bold; }

em, i, cite, dfn { font-style: italic; }

p { margin: 1em 0 0 0; }
p:first-child { margin: 0 0 0 0; }

li li { font-size: 1em; }

ul, ol { margin: 1em 0 1em 1.1111em; }
ul ul, ul ol, ol ul, ol ol { margin-top: 0; margin-bottom: 0; }
nav ul, nav ol { list-style: none; margin: 0; }

sup { font-size: .6em; opacity: .8; vertical-align: top; position: relative; bottom: -.2em; }
.oldie sup { font-size: 10px; font-weight: normal; line-height: 1; }
h1 sup, h2 sup, h3 sup { font-size: .4em; }
.oldie h1 sup, .oldie h2 sup, .oldie h3 sup { font-size: .4em; }
sup a { color: #333333; }
sup a:hover { color: #0088cc; text-decoration: none; }

sub { line-height: 1; }

abbr { border: 0; }

.selfclear:before, .selfclear:after { content: " "; display: table; }
.selfclear:after { clear: both; }
html.oldie .selfclear { zoom: 1; }

.visuallyhidden { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; }

.imagereplace { font: 0/0 a; color: transparent; }

.nowrap { white-space: nowrap; }

.clear { clear: both; }

#top { position: absolute; top: 0; }

.cursor-grab { cursor: move; cursor: -webkit-grab; cursor: grab; }

.cursor-grabbing { cursor: move; cursor: -webkit-grabbing; cursor: grabbing; }

.row { position: relative; z-index: 1; }
.row:before, .row:after { content: " "; display: table; }
.row:after { clear: both; }
html.oldie .row { zoom: 1; }

.column { position: relative; z-index: 1; min-height: 2px; margin: 0; padding: 0; float: left; width: 100%; }

.large-1 { width: 8.3333%; }
html.oldie .large-1 { width: 8.325%; }

.large-centered-1 { margin-left: 45.8333%; }
html.oldie .large-centered-1 { margin-left: 45.7875%; }

.large-offset-1 { margin-left: 8.3333%; }
html.oldie .large-offset-1 { margin-left: 8.325%; }

.large-push-1 { left: 8.3333%; right: auto; }

.large-pull-1 { right: 8.3333%; left: auto; }

.large-2 { width: 16.6667%; }
html.oldie .large-2 { width: 16.65%; }

.large-centered-2 { margin-left: 41.6667%; }
html.oldie .large-centered-2 { margin-left: 41.625%; }

.large-offset-2 { margin-left: 16.6667%; }
html.oldie .large-offset-2 { margin-left: 16.65%; }

.large-push-2 { left: 16.6667%; right: auto; }

.large-pull-2 { right: 16.6667%; left: auto; }

.large-3 { width: 25%; }
html.oldie .large-3 { width: 24.975%; }

.large-centered-3 { margin-left: 37.5%; }
html.oldie .large-centered-3 { margin-left: 37.4625%; }

.large-offset-3 { margin-left: 25%; }
html.oldie .large-offset-3 { margin-left: 24.975%; }

.large-push-3 { left: 25%; right: auto; }

.large-pull-3 { right: 25%; left: auto; }

.large-4 { width: 33.3333%; }
html.oldie .large-4 { width: 33.3%; }

.large-centered-4 { margin-left: 33.3333%; }
html.oldie .large-centered-4 { margin-left: 33.3%; }

.large-offset-4 { margin-left: 33.3333%; }
html.oldie .large-offset-4 { margin-left: 33.3%; }

.large-push-4 { left: 33.3333%; right: auto; }

.large-pull-4 { right: 33.3333%; left: auto; }

.large-5 { width: 41.6667%; }
html.oldie .large-5 { width: 41.625%; }

.large-centered-5 { margin-left: 29.1667%; }
html.oldie .large-centered-5 { margin-left: 29.1375%; }

.large-offset-5 { margin-left: 41.6667%; }
html.oldie .large-offset-5 { margin-left: 41.625%; }

.large-push-5 { left: 41.6667%; right: auto; }

.large-pull-5 { right: 41.6667%; left: auto; }

.large-6 { width: 50%; }
html.oldie .large-6 { width: 49.95%; }

.large-centered-6 { margin-left: 25%; }
html.oldie .large-centered-6 { margin-left: 24.975%; }

.large-offset-6 { margin-left: 50%; }
html.oldie .large-offset-6 { margin-left: 49.95%; }

.large-push-6 { left: 50%; right: auto; }

.large-pull-6 { right: 50%; left: auto; }

.large-7 { width: 58.3333%; }
html.oldie .large-7 { width: 58.275%; }

.large-centered-7 { margin-left: 20.8333%; }
html.oldie .large-centered-7 { margin-left: 20.8125%; }

.large-offset-7 { margin-left: 58.3333%; }
html.oldie .large-offset-7 { margin-left: 58.275%; }

.large-push-7 { left: 58.3333%; right: auto; }

.large-pull-7 { right: 58.3333%; left: auto; }

.large-8 { width: 66.6667%; }
html.oldie .large-8 { width: 66.6%; }

.large-centered-8 { margin-left: 16.6667%; }
html.oldie .large-centered-8 { margin-left: 16.65%; }

.large-offset-8 { margin-left: 66.6667%; }
html.oldie .large-offset-8 { margin-left: 66.6%; }

.large-push-8 { left: 66.6667%; right: auto; }

.large-pull-8 { right: 66.6667%; left: auto; }

.large-9 { width: 75%; }
html.oldie .large-9 { width: 74.925%; }

.large-centered-9 { margin-left: 12.5%; }
html.oldie .large-centered-9 { margin-left: 12.4875%; }

.large-offset-9 { margin-left: 75%; }
html.oldie .large-offset-9 { margin-left: 74.925%; }

.large-push-9 { left: 75%; right: auto; }

.large-pull-9 { right: 75%; left: auto; }

.large-10 { width: 83.3333%; }
html.oldie .large-10 { width: 83.25%; }

.large-centered-10 { margin-left: 8.3333%; }
html.oldie .large-centered-10 { margin-left: 8.325%; }

.large-offset-10 { margin-left: 83.3333%; }
html.oldie .large-offset-10 { margin-left: 83.25%; }

.large-push-10 { left: 83.3333%; right: auto; }

.large-pull-10 { right: 83.3333%; left: auto; }

.large-11 { width: 91.6667%; }
html.oldie .large-11 { width: 91.575%; }

.large-centered-11 { margin-left: 4.1667%; }
html.oldie .large-centered-11 { margin-left: 4.1625%; }

.large-offset-11 { margin-left: 91.6667%; }
html.oldie .large-offset-11 { margin-left: 91.575%; }

.large-push-11 { left: 91.6667%; right: auto; }

.large-pull-11 { right: 91.6667%; left: auto; }

.large-12 { width: 100%; }
html.oldie .large-12 { width: 99.9%; }

.large-centered-12 { margin-left: 0%; }
html.oldie .large-centered-12 { margin-left: 0%; }

.large-offset-12 { margin-left: 100%; }
html.oldie .large-offset-12 { margin-left: 99.9%; }

.large-push-12 { left: 100%; right: auto; }

.large-pull-12 { right: 100%; left: auto; }

.large-offset-0 { margin-left: 0; }

.large-push-0 { left: auto; right: auto; }

.large-pull-0 { right: auto; left: auto; }

.large-centered { margin-left: auto; margin-right: auto; float: none; }

.large-uncentered { margin-left: 0; margin-right: 0; float: left; }

.large-auto { position: absolute; }

.large-auto-top { top: 0; }

.large-auto-bottom { bottom: 0; }

.large-auto-left { left: 0; }

.large-auto-right { right: 0; }

a.block { display: block; cursor: pointer; text-decoration: none; color: inherit; }
html.oldie a.block { color: expression(this.parentNode.currentStyle['color']); }
a.block:before, a.block:after { content: " "; display: table; }
a.block:after { clear: both; }
html.oldie a.block { zoom: 1; }
.no-touch a.block:hover .block-link, .no-js a.block:hover .block-link { text-decoration: underline; }
.no-touch a.block:hover .block-link.icon-ie-parent, .no-js a.block:hover .block-link.icon-ie-parent { text-decoration: none; }
.no-touch a.block:hover .block-link.icon-ie-parent .icon-ie-link, .no-js a.block:hover .block-link.icon-ie-parent .icon-ie-link { text-decoration: underline; }
a.block .block-link { color: #0088cc; cursor: pointer; }

a.block-inline { display: inline-block; }

.button { background: #1d9bd9; background: -webkit-linear-gradient(#3baee7, #0088cc); background: linear-gradient(#3baee7, #0088cc); border-radius: 4px; color: white; cursor: pointer; font-size: 0.8333em; line-height: 2.16; text-align: center; white-space: nowrap; padding: 0 1.0667em; display: inline-block; }
html.oldie .button { display: inline; zoom: 1; }
html.oldie .button { vertical-align: middle; }
.no-touch .button:hover, .no-js .button:hover { background: #2fa2dc; background: -webkit-linear-gradient(#4ab4e8, #1491d0); background: linear-gradient(#4ab4e8, #1491d0); text-decoration: none; }
.button:active { background: #0d85c0; background: -webkit-linear-gradient(#1b9dde, #006da3); background: linear-gradient(#1b9dde, #006da3); outline: none; }

.button-buynow, .button-compact { background: #1d9bd9; background: -webkit-linear-gradient(#3baee7, #0088cc); background: linear-gradient(#3baee7, #0088cc); border-color: #137ec6; border-top-color: #1992da; border-bottom-color: #0d6ab2; color: white; color: white; font-size: 13px; padding: 0 0.8462em; line-height: 1.7; }
.no-touch .button-buynow:hover, .no-js .button-buynow:hover, .no-touch .button-compact:hover, .no-js .button-compact:hover { background: #2fa2dc; background: -webkit-linear-gradient(#4ab4e8, #1491d0); background: linear-gradient(#4ab4e8, #1491d0); }
.button-buynow:active, .button-compact:active { background: #0d85c0; background: -webkit-linear-gradient(#1b9dde, #006da3); background: linear-gradient(#1b9dde, #006da3); }

.dotnav { text-align: center; }
html.touch .dotnav { pointer-events: none; }
.dotnav ul { display: inline-block; }
html.oldie .dotnav ul { display: inline; zoom: 1; }
.dotnav li { list-style: none; margin: 0 10px; width: 8px; height: 8px; float: left; position: relative; }
.dotnav .dotnav-item { top: 0; left: 0; width: 8px; height: 8px; outline: none; position: absolute; border-radius: 50%; background-color: #999999; font: 0/0 a; color: transparent; }
.no-touch .dotnav .dotnav-item:hover, .no-js .dotnav .dotnav-item:hover { background-color: #666666; }
.dotnav .dotnav-item.active, .dotnav .dotnav-item.current { top: -1px; left: -1px; width: 8px; height: 8px; border-style: solid; border-width: 1px; border-color: #0088cc; background-color: transparent; cursor: default; }
.no-touch .dotnav .dotnav-item.active:hover, .no-js .dotnav .dotnav-item.active:hover, .no-touch .dotnav .dotnav-item.current:hover, .no-js .dotnav .dotnav-item.current:hover { background-color: transparent; }

@font-face { font-family: 'Apple Icons'; font-style: normal; font-weight: 100; src: url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Ultralight.eot"); src: url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Ultralight.eot?#iefix") format("embedded-opentype"), url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Ultralight.woff") format("woff"), url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Ultralight.ttf") format("truetype"); }
@font-face { font-family: 'Apple Icons'; font-style: normal; font-weight: 200; src: url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Thin.eot"); src: url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Thin.eot?#iefix") format("embedded-opentype"), url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Thin.woff") format("woff"), url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Thin.ttf") format("truetype"); }
@font-face { font-family: 'Apple Icons'; font-style: normal; font-weight: 400; src: url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Text.eot"); src: url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Text.eot?#iefix") format("embedded-opentype"), url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Text.woff") format("woff"), url("/v/itunes/charts/c/ac-assets/fonts/AppleIcons-Text.ttf") format("truetype"); }
.icon, .more, .breadcrumbs-list > li { behavior: url("/v/itunes/charts/c/ac-assets/behaviors/icons.htc"); }
.icon:before, .more:before, .breadcrumbs-list > li:before { display: none; padding-right: 0.3em; }
.icon:after, .more:after, .breadcrumbs-list > li:after { display: inline-block; padding-left: 0.3em; }
.icon .icon-htc, .more .icon-htc, .breadcrumbs-list > li .icon-htc { padding-left: 0.3em; padding-right: 0.3em; }
.icon:before, .more:before, .breadcrumbs-list > li:before, .icon:after, .more:after, .breadcrumbs-list > li:after, .icon .icon-htc, .more .icon-htc, .breadcrumbs-list > li .icon-htc { color: inherit; font-family: 'Apple Icons'; font-style: normal; font-weight: inherit; font-size: 1em; line-height: 1; text-decoration: none; position: relative; z-index: 1; }

.icon-before:before, .breadcrumbs-list > li:before { display: inline-block; position: relative; top: -0.125em; }
.icon-before:after, .breadcrumbs-list > li:after { display: none; }

.icon-ie-parent { text-decoration: none; }
.no-touch .icon-ie-parent:hover, .no-js .icon-ie-parent:hover { text-decoration: none; }
.no-touch .icon-ie-parent:hover .icon-ie-link, .no-js .icon-ie-parent:hover .icon-ie-link { text-decoration: underline; }

.icon-apple:before, .icon-apple:after { content: ""; }

.icon-more:before, .more:before, .icon-more:after, .more:after { content: ""; }

.icon-chevronright:before, .icon-chevronright:after { content: ""; }

.icon-chevronrightalt:before, .icon-chevronrightalt:after { content: ""; }

.icon-chevrondown:before, .icon-chevrondown:after { content: ""; }

.icon-chevrondownalt:before, .icon-chevrondownalt:after { content: ""; }

.icon-chevronleft:before, .icon-chevronleft:after { content: ""; }

.icon-chevronleftalt:before, .icon-chevronleftalt:after { content: ""; }

.icon-chevronup:before, .icon-chevronup:after { content: ""; }

.icon-chevronupalt:before, .icon-chevronupalt:after { content: ""; }

.icon-close:before, .icon-close:after { content: ""; }

.icon-closealt:before, .icon-closealt:after { content: ""; }

.icon-closeinlinealt:before, .icon-closeinlinealt:after { content: ""; }

.icon-download:before, .icon-download:after { content: ""; }

.icon-downloadalt:before, .icon-downloadalt:after { content: ""; }

.icon-external:before, .icon-external:after { content: ""; }

.icon-info:before, .icon-info:after { content: ""; }

.icon-list:before, .icon-list:after { content: ""; }

.icon-paddledown:before, .icon-paddledown:after { content: ""; }

.icon-paddleleft:before, .icon-paddleleft:after { content: ""; }

.icon-paddleright:before, .breadcrumbs-list > li:before, .icon-paddleright:after, .breadcrumbs-list > li:after { content: ""; }

.icon-paddleup:before, .icon-paddleup:after { content: ""; }

.icon-pause:before, .icon-pause:after { content: ""; }

.icon-play:before, .icon-play:after { content: ""; }

.icon-playalt:before, .icon-playalt:after { content: ""; }

.icon-replay:before, .icon-replay:after { content: ""; }

.icon-zoom:before, .icon-zoom:after { content: ""; }

.more-block { margin-top: 0.5em; }

.list-square { list-style: square outside; }

.list-circle { list-style: circle outside; }

.list-disc { list-style: disc outside; }

.localnav { border-bottom: 1px solid #d6d6d6; margin: 1em auto 0; max-width: 980px; }
.localnav:before, .localnav:after { content: " "; display: table; }
.localnav:after { clear: both; }
html.oldie .localnav { zoom: 1; }

.localnav-title { padding: 0; display: block; font-size: 32px; line-height: 1; float: left; }
.localnav-title > a { margin: 0 0 0 0; color: #333333; display: block; text-decoration: none; }
.localnav-title > a:hover { text-decoration: none; }

.localnav-links { float: right; margin: 8px 0 7px 0; }
.localnav-links > li { float: left; list-style: none; margin-left: 30px; }
.localnav-links .button { margin: 0; }

.localnav-link-title { display: none; }

.localnav-link { font-size: 13px; color: #333333; display: inline-block; white-space: nowrap; }
.no-touch .localnav-link:hover, .no-js .localnav-link:hover { color: #0088cc; text-decoration: none; }
.localnav-link.current { color: #999999; }
.no-touch .localnav-link.current:hover, .no-js .localnav-link.current:hover { color: #999999; }

.footer-wrapper { margin-left: auto; margin-right: auto; background: #f2f2f2; }
.footer-wrapper:before, .footer-wrapper:after { content: " "; display: table; }
.footer-wrapper:after { clear: both; }
html.oldie .footer-wrapper { zoom: 1; }

.footer-global { margin-left: auto; margin-right: auto; width: 980px; color: #999999; padding-top: 18px; padding-bottom: 18px; line-height: 1; font-size: 1em; }
.footer-global:before, .footer-global:after { content: " "; display: table; }
.footer-global:after { clear: both; }
html.oldie .footer-global { zoom: 1; }
.footer-global a { color: #666666; }
.no-touch .footer-global a:hover, .no-js .footer-global a:hover { color: #333333; }

.footer-breadory { border-bottom: 1px solid #e3e3e3; margin-bottom: 22px; position: relative; line-height: 1.3889; }
.footer-breadory:before, .footer-breadory:after { content: " "; display: table; }
.footer-breadory:after { clear: both; }
html.oldie .footer-breadory { zoom: 1; }

.breadcrumbs { width: 100%; overflow-x: auto; -webkit-overflow-scrolling: touch; white-space: nowrap; direction: rtl; }
html.oldie .breadcrumbs { overflow: visible; }

.breadcrumbs-list { color: #666666; padding-bottom: 16px; float: right; min-width: 100%; direction: ltr; }
.breadcrumbs-list:before, .breadcrumbs-list:after { content: " "; display: table; }
.breadcrumbs-list:after { clear: both; }
html.oldie .breadcrumbs-list { zoom: 1; }
.breadcrumbs-list > li:first-child { margin-left: 12px; }
.breadcrumbs-list > li { font-size: 0.6667em; line-height: 2; font-weight: 400; display: inline-block; padding-left: 0.8em; white-space: nowrap; }
html.oldie .breadcrumbs-list > li { display: block; float: left; margin-left: 14px; margin-top: 2px; }
.breadcrumbs-list > li a { color: #666666; }
.no-touch .breadcrumbs-list > li a:hover, .no-js .breadcrumbs-list > li a:hover { color: #333333; text-decoration: none; }
.breadcrumbs-list > li:before { font-size: 1.3333em; line-height: 1; padding-right: 0.5em; top: 0.1em; color: #d6d6d6; font-weight: 400; }

.breadcrumbs-home { color: #666666; background: #f2f2f2; display: block; font-size: 1.1111em; line-height: 1; height: 1em; position: absolute; top: 0.2222em; left: 0; z-index: 2; font-family: 'Apple Icons', 'Myriad Set Pro', 'Apple TP', 'MHei', 'PingHei', 'Sukhumvit Set', 'Yoon Gothic'; }
html.oldie .breadcrumbs-home { line-height: 0.9; }
.no-touch .breadcrumbs-home:hover, .no-js .breadcrumbs-home:hover { color: #333333; text-decoration: none; }

.breadcrumbs-home-label { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; }

.directorynav { position: relative; z-index: 1; margin-top: 0; margin-bottom: 18px; }
.directorynav:before, .directorynav:after { content: " "; display: table; }
.directorynav:after { clear: both; }
html.oldie .directorynav { zoom: 1; }
.directorynav > .column input { display: none; }
.directorynav > .column li { line-height: 1; }
.directorynav > .column a { font-size: 0.6667em; line-height: 1.4167; font-weight: 400; display: inline; color: #666666; white-space: normal; }
.no-touch .directorynav > .column a:hover, .no-js .directorynav > .column a:hover { color: #333333; }
.directorynav > .column h3 { margin: 0; padding: 0; font-size: 0.6667em; line-height: 1.4167; font-weight: 600; color: #333333; letter-spacing: 0; }
html.oldie .directorynav > .column h3 { font-weight: normal; font-family: "Myriad Set Pro 600", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] .directorynav > .column h3 { font-family: "Apple TP 600", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] .directorynav > .column h3 { font-family: "PingHei 600", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] .directorynav > .column h3 { font-family: "MHei 600", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] .directorynav > .column h3 { font-family: "MHei 600", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] .directorynav > .column h3 { font-family: "Sukhumvit Set 600", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] .directorynav > .column h3 { font-family: "Yoon Gothic 600", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

.directorynav-subcol + .directorynav-subcol { margin-top: 1.1667em; }

.footer-shop, .footer-links, .footer-sosumi { font-size: 0.6667em; line-height: 1.3333; font-weight: 400; width: auto; float: left; margin-top: 0; margin-bottom: 0.6667em; margin-right: 0.5em; }

p.footer-shop { margin-bottom: 0.6667em; }

.footer-links { float: right; }

.footer-education + .footer-links { margin-left: 0; float: left; }

.footer-sosumi { width: 100%; }
.footer-sosumi > p { margin-right: 0.5em; }

.footer-sosumi > p, .footer-sosumi > ul, .footer-sosumi > ul > li { display: inline; margin-left: 0; margin-top: 0; }
.footer-sosumi > p > a, .footer-sosumi > ul > a, .footer-sosumi > ul > li > a { padding: 0 0.5em 0 0.6667em; border-left: 1px solid #e3e3e3; white-space: nowrap; }
.footer-sosumi > p:first-child > a, .footer-sosumi > ul:first-child > a, .footer-sosumi > ul > li:first-child > a { border-left: none; padding-left: 0; }

.footer-links > li { display: inline-block; margin-left: 0; }
html.oldie .footer-links > li { display: inline; zoom: 1; }
.footer-links > li > a { padding: 0 0.5em 0 0; margin-right: 0.3333em; border-right: 1px solid #e3e3e3; white-space: nowrap; }
.footer-links > li > a.choose { border-right: none; margin-right: 0; padding-right: 0; position: relative; padding-left: 16px; }
html.oldie .footer-links > li > a.choose { display: inline; zoom: 1; }
html.oldie .footer-links > li > a.choose { height: .8em; }
.footer-links > li > a.choose > img { position: absolute; left: 0; top: -3px; }

html.oldie .footer-links { white-space: nowrap; }
.footer-white { background: white; }
.footer-white .footer-global { color: #999999; }
.footer-white .footer-global a { color: #666666; }
.no-touch .footer-white .footer-global a:hover, .no-js .footer-white .footer-global a:hover { color: #333333; }
.footer-white .footer-breadory { border-color: #e3e3e3; }
.footer-white .footer-breadory:after { background: white; }
.footer-white .breadcrumbs { color: #666666; }
.footer-white .breadcrumbs > li a { color: #666666; }
.no-touch .footer-white .breadcrumbs > li a:hover, .no-js .footer-white .breadcrumbs > li a:hover { color: #333333; }
.footer-white .breadcrumbs > li:before { color: #e3e3e3; }
.footer-white .directorynav a { color: #666666; }
.no-touch .footer-white .directorynav a:hover, .no-js .footer-white .directorynav a:hover { color: #333333; }
.footer-white .directorynav h3 { color: #333333; }
.footer-white .footer-links > li > a, .footer-white .footer-sosumi > p > a, .footer-white .footer-sosumi > ul > a, .footer-white .footer-sosumi > ul > li > a { border-color: #e3e3e3; }
.footer-white .footer-links > li:first-child > a, .footer-white .footer-sosumi > p:first-child > a, .footer-white .footer-sosumi > ul:first-child > a, .footer-white .footer-sosumi > ul > li:first-child > a { border-left: none; }
.footer-white .breadcrumbs-home { background: white; }

.with-paddlenav { position: relative; }

.paddlenav { list-style: none; margin: 0; }

.paddlenav-arrow { width: 64px; height: 128px; position: absolute; top: 50%; line-height: 1.67; margin-top: -64px; text-align: center; overflow: hidden; color: #999999; background-color: transparent; border-radius: 4px; display: block; font-family: 'Apple Icons'; font-size: 72px; font-style: normal; font-weight: 200; -webkit-transition: 250ms opacity linear, 250ms color linear, 250ms background-color linear; transition: 250ms opacity linear, 250ms color linear, 250ms background-color linear; opacity: 0.7; behavior: url("/v/itunes/charts/c/ac-assets/behaviors/icons.htc"); }
.paddlenav-arrow.disabled { display: none; }
.no-touch .paddlenav-arrow:hover, .no-js .paddlenav-arrow:hover { color: #999999; background-color: transparent; text-decoration: none; opacity: 1; }
.paddlenav-arrow:focus { color: #999999; background-color: transparent; text-decoration: none; }
html.touch .paddlenav-arrow { color: #999999; background-color: transparent; }

.paddlenav-arrow-left { left: 0px; }

.paddlenav-arrow-left::after { content: "\f016"; }

.paddlenav-arrow-right { right: 0px; }

.paddlenav-arrow-right::before { content: "\f017"; }

html.no-touch .paddlenav-onhover .paddlenav-arrow { opacity: 0; }
html.no-touch .paddlenav-onhover .paddlenav-arrow:focus { opacity: 1; }
html.oldie .paddlenav-onhover .paddlenav-arrow { visibility: hidden; }
html.no-touch .with-paddlenav:hover .paddlenav-onhover .paddlenav-arrow { opacity: 0.70; }
html.oldie .with-paddlenav:hover .paddlenav-onhover .paddlenav-arrow { visibility: visible; }
.with-paddlenav:hover .paddlenav-onhover .paddlenav-arrow:hover, .with-paddlenav:hover .paddlenav-onhover .paddlenav-arrow:focus { opacity: 1; }

.paddlenav-framed .paddlenav-arrow { color: #999999; background-color: #f2f2f2; }
.no-touch .paddlenav-framed .paddlenav-arrow:hover, .no-js .paddlenav-framed .paddlenav-arrow:hover { color: #999999; background-color: #f2f2f2; text-decoration: none; }
.paddlenav-framed .paddlenav-arrow:focus { color: #999999; background-color: #f2f2f2; text-decoration: none; }
html.touch .paddlenav-framed .paddlenav-arrow { color: #999999; background-color: #f2f2f2; }
.paddlenav-framed .paddlenav-arrow-left { left: 15px; }
.paddlenav-framed .paddlenav-arrow-right { right: 15px; }

.buystrip { padding-top: 60px; padding-bottom: 60px; text-align: center; border-bottom: 1px solid #e3e3e3; margin-left: auto; margin-right: auto; width: 980px; }

.buystrip-hero { direction: rtl; margin-bottom: 0; }
.buystrip-hero:before, .buystrip-hero:after { content: " "; display: table; }
.buystrip-hero:after { clear: both; }
html.oldie .buystrip-hero { zoom: 1; }

.buystrip-product { vertical-align: middle; display: inline-block; }
html.oldie .buystrip-product { display: inline; zoom: 1; }

.buystrip-product-block { direction: ltr; text-align: left; padding-left: 20px; vertical-align: middle; display: inline-block; }
html.oldie .buystrip-product-block { display: inline; zoom: 1; }

.buystrip-product-title { font-size: 1.9444em; line-height: 1.1429; font-weight: 200; padding-bottom: 8px; }
html.oldie .buystrip-product-title { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] .buystrip-product-title { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] .buystrip-product-title { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] .buystrip-product-title { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] .buystrip-product-title { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] .buystrip-product-title { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] .buystrip-product-title { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

.buystrip-product-copy { font-size: 1em; line-height: 1.5556; font-weight: 400; margin: 0 0 0 0; }

.buystrip-blocks { position: relative; z-index: 1; display: table; width: 100%; }
.buystrip-blocks:before, .buystrip-blocks:after { content: " "; display: table; }
.buystrip-blocks:after { clear: both; }
html.oldie .buystrip-blocks { zoom: 1; }
.buystrip-blocks > .column { display: table-cell; float: none; vertical-align: top; }
html.oldie .buystrip-blocks > .column { float: left; }

.buystrip-block { text-align: center; margin-top: 80px; margin-bottom: 0; width: 208px; margin-left: auto; margin-right: auto; padding-bottom: 1.7778em; }

.buystrip-block-icon { margin-left: auto; margin-right: auto; }

.buystrip-block-title { font-size: 1.3333em; line-height: 1.3333; font-weight: 200; }
html.oldie .buystrip-block-title { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] .buystrip-block-title { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] .buystrip-block-title { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] .buystrip-block-title { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] .buystrip-block-title { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] .buystrip-block-title { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] .buystrip-block-title { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }

.buystrip-block-copy { font-size: 0.8889em; line-height: 1.5; font-weight: 400; color: #666666; margin-top: 0.1111em; }
.buystrip-block-copy:first-child { margin-top: 0; }
.buystrip-block-copy.block-link { margin-top: 0.5em; position: absolute; bottom: 0; left: 0; right: 0; }

.buystrip-block-call .block-link { color: #333333; }

a.buystrip-block-line:before { content: ""; display: block; position: absolute; left: 0; top: 80px; bottom: 0; border-left: 1px solid #e3e3e3; }

.sosumi { color: #999999; }
.sosumi a { color: #666666; }
.no-touch .sosumi a:hover, .no-js .sosumi a:hover { text-decoration: underline; }
.sosumi ol { margin: 0; padding-right: 15px; padding-left: 15px; }
.sosumi ul { list-style: none; margin: 0; }
.sosumi li { padding-bottom: 5px; }
.sosumi p, .sosumi li { font-size: 0.6667em; line-height: 1.3333; font-weight: 400; }
.sosumi small { font-size: 1em; }
.footer-wrapper .sosumi { margin-left: auto; margin-right: auto; width: 980px; padding: 16px 0 11px 0; border-bottom: 1px solid #e3e3e3; }

.thumbnail { margin: 0; position: relative; display: inline-block; vertical-align: top; }
html.oldie .thumbnail { display: inline; zoom: 1; }
.thumbnail > img { z-index: 1; display: block; border-radius: 4px; }
.thumbnail .thumbnail-play { position: absolute; display: block; z-index: 1; width: 38px; height: 38px; top: 5px; left: 21px; font-size: 28px; font-weight: 100; font-family: 'Apple Icons'; color: white; text-align: center; line-height: 1.2; behavior: url("/v/itunes/charts/c/ac-assets/behaviors/icons.htc"); }
.thumbnail .thumbnail-play::after { content: "\f020"; }
.block:hover .thumbnail, .thumbnail:hover, .thumbnail:focus { text-decoration: none; }
.block:hover .thumbnail .thumbnail-play, .thumbnail:hover .thumbnail-play, .thumbnail:focus .thumbnail-play { color: #0088cc; }

.thumbnail + .more { display: block; }

.thumbnav { margin: 0; text-align: center; }
.thumbnav ul { list-style: none; display: inline-block; }
html.oldie .thumbnav ul { display: inline; zoom: 1; }
.thumbnav li { float: left; list-style: none; margin: 0 4px; }

.thumbnav-thumbnail { border-width: 1px; border-style: solid; border-color: transparent; border-radius: 50%; display: inline-block; overflow: hidden; padding: 6px; }
html.oldie .thumbnav-thumbnail { display: inline; zoom: 1; }
.no-touch .thumbnav-thumbnail:hover, .no-js .thumbnav-thumbnail:hover { text-decoration: none; border-color: #d6d6d6; }
.thumbnav-thumbnail.active, .thumbnav-thumbnail.current { border-color: #0088cc; cursor: default; }
.no-touch .thumbnav-thumbnail.active:hover, .no-js .thumbnav-thumbnail.active:hover, .no-touch .thumbnav-thumbnail.current:hover, .no-js .thumbnav-thumbnail.current:hover { border-color: #0088cc; }
.thumbnav-thumbnail > img { display: block; border-radius: 50%; }

.thumbnav-rect li { margin: 0 4px; }
.thumbnav-rect .thumbnav-thumbnail { border-width: 1px; border-style: solid; border-color: #d6d6d6; border-radius: 4px; padding: 0; }
.no-touch .thumbnav-rect .thumbnav-thumbnail:hover, .no-js .thumbnav-rect .thumbnav-thumbnail:hover { border-color: #999999; }
.thumbnav-rect .thumbnav-thumbnail.active, .thumbnav-rect .thumbnav-thumbnail.current { border-color: #0088cc; }
.no-touch .thumbnav-rect .thumbnav-thumbnail.active:hover, .no-js .thumbnav-rect .thumbnav-thumbnail.active:hover, .no-touch .thumbnav-rect .thumbnav-thumbnail.current:hover, .no-js .thumbnav-rect .thumbnav-thumbnail.current:hover { border-color: #0088cc; }
.thumbnav-rect .thumbnav-thumbnail > img { border-radius: 0; }

html { width: 100%; height: 100%; }
html.oldie { overflow-x: hidden; }

body { min-width: 1024px; min-height: 100%; }

.section { overflow: hidden; width: 100%; }
.section:before, .section:after { content: " "; display: table; }
.section:after { clear: both; }
html.oldie .section { zoom: 1; }
.section .section-content { margin-left: auto; margin-right: auto; }

.main .section-content { width: 900px; }
html.oldie .main .section-content { width: 980px; }

.section-hero { text-align: center; }
.section-hero h1 { margin: 50px 0 0; font-size: 3.5556em; line-height: 1; font-weight: 200; }
html.oldie .section-hero h1 { font-weight: normal; font-family: "Myriad Set Pro 200", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] .section-hero h1 { font-family: "Apple TP 200", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] .section-hero h1 { font-family: "PingHei 200", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] .section-hero h1 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] .section-hero h1 { font-family: "MHei 200", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] .section-hero h1 { font-family: "Sukhumvit Set 200", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] .section-hero h1 { font-family: "Yoon Gothic 200", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }
.section-hero p { margin: 0; }
.section-hero .intro { padding: 25px 135px 0; }

/* sub nav */
.subnav { border-bottom: solid 1px #d6d6d6; margin: 60px 0 0; text-align: justify; -ms-text-justify: distribute-all-lines; text-justify: distribute-all-lines; font-size: 0; }
.subnav:after { display: inline-block; width: 100%; height: 0; line-height: 0; content: ''; }
.subnav a { font-size: 0.7222em; line-height: 1; font-weight: 400; position: relative; display: inline-block; color: #333; padding-bottom: 15px; text-align: center; margin: 0 0 -1px; z-index: 1; max-width: 10%; font-size: 13px; }
.oldie .subnav a { line-height: 1.5; }
.subnav a:hover { text-decoration: none; color: #999; }

body#featured .subnav a.featured, body#songs .subnav a.songs, body#albums .subnav a.albums, body#shows .subnav a.shows, body#movies .subnav a.movies, body#videorentals.subnav a.videorentals, body#books .subnav a.books, body#free-apps .subnav a.freeapps, body#paid-apps .subnav a.paidapps, body#musicvideos .subnav a.musicvideos, body#movierentals .subnav a.movierentals { color: #000; border-bottom: solid 1px #000; }

.chart-grid.first { padding-top: 75px; }
.chart-grid .section-content { padding: 30px 0 0; }
.chart-grid h1, .chart-grid a.all { display: inline-block; margin: 0; }
html.oldie .chart-grid h1, html.oldie .chart-grid a.all { display: inline; zoom: 1; }
.chart-grid h1 { font-size: 1em; line-height: 1; font-weight: 600; margin-right: 20px; }
html.oldie .chart-grid h1 { font-weight: normal; font-family: "Myriad Set Pro 600", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] .chart-grid h1 { font-family: "Apple TP 600", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] .chart-grid h1 { font-family: "PingHei 600", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] .chart-grid h1 { font-family: "MHei 600", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] .chart-grid h1 { font-family: "MHei 600", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] .chart-grid h1 { font-family: "Sukhumvit Set 600", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] .chart-grid h1 { font-family: "Yoon Gothic 600", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }
.chart-grid a.all { padding: 0 10px 0 0; }
.chart-grid ul { clear: both; list-style-type: none; margin: 15px 0 0 10px; }
.chart-grid ul:after { content: '.'; display: block; height: 0; clear: both; visibility: hidden; }
.chart-grid ul li { float: left; position: relative; width: 150px; margin: 0; padding: 0 44px 30px 0; font-size: 0.6875em; }
.chart-grid ul li:nth-child(5n) { margin-right: -80px; }
.chart-grid strong { position: relative; right: 155px; top: 13px; text-align: right; font-weight: normal; display: block; }
.chart-grid h3, .chart-grid h4 { position: relative; display: block; width: 120px; height: 1.4em; margin: 0; font-weight: normal; font-size: 1em; line-height: 1.4em; color: #999; overflow: hidden; }
.chart-grid h3 a { color: #4c4c4c; }
.chart-grid a.all { float: none; font-size: 0.8em; }
.chart-grid h3 { clear: left; font-weight: bold; }
.chart-grid img { display: block; position: relative; z-index: 1; margin-bottom: 5px; -ms-interpolation-mode: bicubic; box-shadow: 0 0 4px 0px rgba(0, 0, 0, 0.4); }
.chart-grid.apps img { margin-top: -9px; margin-bottom: 10px; border-radius: 20px; box-shadow: 0 4px 3px -2px rgba(0, 0, 0, 0.8); }
.chart-grid.movies li { padding-right: 40px; }
.chart-grid.music-videos li { padding-right: 37px; }
.chart-grid.music-videos li a.container { width: 133px; height: 70px; margin: 0 0 16px; padding: 0; overflow: hidden; box-shadow: 0 0 4px 0px rgba(0, 0, 0, 0.4); }
.chart-grid.music-videos li a.container .frame { display: table; height: 70px; background-color: #000; }
.chart-grid.music-videos li a.container .frame .image { display: table-cell; vertical-align: middle; padding: 0; margin: 0; }
html.oldie .chart-grid.music-videos li a.container .frame .image { position: absolute; top: 50%; }
.chart-grid.music-videos li a.container .frame .image img { margin: 0; box-shadow: none; }
html.oldie .chart-grid.music-videos li a.container .frame .image img { position: relative; top: -50%; }
.chart-grid a { display: block; position: relative; padding: 7px; margin: -7px 0 -3px -7px; color: #999; font-weight: 600; }
.chart-grid a:hover { text-decoration: underline; }
.chart-grid a.more { height: 1.4em; line-height: 1.4em; color: #08c; }

#globalheader { margin-bottom: 0; }

html body.itunes div.localnav-wrapper { background-color: rgba(255, 255, 255, 0.95); border-bottom: solid 1px #d6d6d6; position: -webkit-sticky; position: sticky; margin-top: 0; top: 0; z-index: 9000; }
html body.itunes div.localnav-wrapper .localnav { border: none; padding: 13px 0 0 0; margin-top: 0; }

.page-overview .itunes-gallery { font-size: 12px; margin: 0 auto; width: 100%; height: 575px; overflow: visible; border-bottom: solid 1px #d6d6d6; }
.page-overview .itunes-gallery .frame { margin-bottom: 50px; overflow: hidden; }
.page-overview .itunes-gallery .tray { margin-top: 60px; width: 4000px; overflow: auto; }
.touch .page-overview .itunes-gallery .paddlenav { display: none; }
.page-overview .itunes-gallery .gallery-content { position: relative; width: 900px; float: left; }
html.oldie .page-overview .itunes-gallery .gallery-content { width: 980px; }
.page-overview .itunes-gallery .gallery-content .promo { position: relative; margin: 0 auto; text-align: center; width: 680px; }
.page-overview .itunes-gallery .gallery-content .promo h4 { font-size: 1.3333em; line-height: 1; font-weight: 600; margin-bottom: 13px; color: #999; }
html.oldie .page-overview .itunes-gallery .gallery-content .promo h4 { font-weight: normal; font-family: "Myriad Set Pro 600", "Myriad Set Pro", "Lucida Grande", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ja-JP] .page-overview .itunes-gallery .gallery-content .promo h4 { font-family: "Apple TP 600", "Apple TP", "Helvetica Neue", "Helvetica", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro W3", "メイリオ", "Meiryo", "ＭＳ Ｐゴシック", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-CN] .page-overview .itunes-gallery .gallery-content .promo h4 { font-family: "PingHei 600", "PingHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-TW] .page-overview .itunes-gallery .gallery-content .promo h4 { font-family: "MHei 600", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=zh-HK] .page-overview .itunes-gallery .gallery-content .promo h4 { font-family: "MHei 600", "MHei", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=th-TH] .page-overview .itunes-gallery .gallery-content .promo h4 { font-family: "Sukhumvit Set 600", "Sukhumvit Set", "Helvetica Neue", "Helvetica", "Arial", "Verdana", "sans-serif"; }
html.oldie[lang=ko-KR] .page-overview .itunes-gallery .gallery-content .promo h4 { font-family: "Yoon Gothic 600", "Yoon Gothic", "Helvetica Neue", "Helvetica", "Dotum", "Arial", "Verdana", "sans-serif"; }
.page-overview .itunes-gallery .gallery-content .promo ul { list-style: none; margin: 20px 0 0; }
.page-overview .itunes-gallery .gallery-content .promo ul li { width: 200px; padding: 0 20px; }
.page-overview .itunes-gallery .gallery-content .promo ul li.first { padding: 0 19px 0 0; border-right: solid 1px #d6d6d6; }
.page-overview .itunes-gallery .gallery-content .promo ul li.last { padding: 0 0 0 19px; border-left: solid 1px #d6d6d6; }
.page-overview .chart-grid .section-content { border-top: solid 1px #d6d6d6; }
.page-overview .chart-grid.first .section-content { border-top: none; }
